{"name":"Echo","tagline":"Fast HTTP router + micro web framework","body":"# Echo [![GoDoc](http://img.shields.io/badge/go-documentation-blue.svg?style=flat-square)](http://godoc.org/github.com/labstack/echo) [![Build Status](http://img.shields.io/travis/labstack/echo.svg?style=flat-square)](https://travis-ci.org/labstack/echo) [![Coverage Status](http://img.shields.io/coveralls/labstack/echo.svg?style=flat-square)](https://coveralls.io/r/labstack/echo)\r\nEcho is a fast HTTP router (zero memory allocation) + micro web framework in Go.\r\n\r\n### Features\r\n- Zippy router.\r\n- Extensible middleware/handler, supports:\r\n\t- Middleware\r\n\t\t- `func(*echo.Context)`\r\n\t\t- `func(echo.HandlerFunc) echo.HandlerFunc`\r\n\t\t- `func(http.Handler) http.Handler`\r\n\t\t- `http.Handler`\r\n\t\t- `http.HandlerFunc`\r\n\t\t- `func(http.ResponseWriter, *http.Request)`\r\n\t- Handler\r\n\t\t- `func(*echo.Context)`\r\n\t\t- `http.Handler`\r\n\t\t- `http.HandlerFunc`\r\n\t\t- `func(http.ResponseWriter, *http.Request)`\r\n- Handy encoding/decoding functions.\r\n- Serve static files, including index.\r\n\r\n### Installation\r\n```go get github.com/labstack/echo```\r\n\r\n### Usage\r\n[labstack/echo/example](https://github.com/labstack/echo/tree/master/example)\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"net/http\"\r\n\r\n\t\"github.com/labstack/echo\"\r\n\tmw \"github.com/labstack/echo/middleware\"\r\n\t\"github.com/rs/cors\"\r\n\t\"github.com/thoas/stats\"\r\n)\r\n\r\ntype user struct {\r\n\tID   string `json:\"id\"`\r\n\tName string `json:\"name\"`\r\n}\r\n\r\nvar users map[string]user\r\n\r\nfunc init() {\r\n\tusers = map[string]user{\r\n\t\t\"1\": user{\r\n\t\t\tID:   \"1\",\r\n\t\t\tName: \"Wreck-It Ralph\",\r\n\t\t},\r\n\t}\r\n}\r\n\r\nfunc createUser(c *echo.Context) {\r\n\tu := new(user)\r\n\tif c.Bind(u) {\r\n\t\tusers[u.ID] = *u\r\n\t\tc.JSON(http.StatusCreated, u)\r\n\t}\r\n}\r\n\r\nfunc getUsers(c *echo.Context) {\r\n\tc.JSON(http.StatusOK, users)\r\n}\r\n\r\nfunc getUser(c *echo.Context) {\r\n\tc.JSON(http.StatusOK, users[c.P(0)])\r\n}\r\n\r\nfunc main() {\r\n\te := echo.New()\r\n\r\n\t//*************************//\r\n\t//   Built-in middleware   //\r\n\t//*************************//\r\n\te.Use(mw.Logger)\r\n\r\n\t//****************************//\r\n\t//   Third-party middleware   //\r\n\t//****************************//\r\n\t// https://github.com/rs/cors\r\n\te.Use(cors.Default().Handler)\r\n\r\n\t// https://github.com/thoas/stats\r\n\ts := stats.New()\r\n\te.Use(s.Handler)\r\n\t// Route\r\n\te.Get(\"/stats\", func(c *echo.Context) {\r\n\t\tc.JSON(200, s.Data())\r\n\t})\r\n\r\n\t// Serve index file\r\n\te.Index(\"public/index.html\")\r\n\r\n\t// Serve static files\r\n\te.Static(\"/js\", \"public/js\")\r\n\r\n\t//************//\r\n\t//   Routes   //\r\n\t//************//\r\n\te.Post(\"/users\", createUser)\r\n\te.Get(\"/users\", getUsers)\r\n\te.Get(\"/users/:id\", getUser)\r\n\r\n\t// Start server\r\n\te.Run(\":8080\")\r\n}\r\n\r\n```\r\n\r\n### Benchmark\r\nBased on [julienschmidt/go-http-routing-benchmark] (https://github.com/vishr/go-http-routing-benchmark), April 1, 2015\r\n##### [GitHub API](http://developer.github.com/v3)\r\n> Echo: 43700 ns/op, 0 B/op, 0 allocs/op\r\n\r\n```\r\nBenchmarkAce_GithubAll\t   \t\t20000\t     69126 ns/op\t   13792 B/op\t     167 allocs/op\r\nBenchmarkBear_GithubAll\t   \t\t10000\t    252699 ns/op\t   79952 B/op\t     943 allocs/op\r\nBenchmarkBeego_GithubAll\t\t 3000\t    485692 ns/op\t  146272 B/op\t    2092 allocs/op\r\nBenchmarkEcho_GithubAll\t   \t\t30000\t     43700 ns/op\t       0 B/op\t       0 allocs/op\r\nBenchmarkBone_GithubAll\t    \t 1000\t   2158467 ns/op\t  648016 B/op\t    8119 allocs/op\r\nBenchmarkDenco_GithubAll   \t\t20000\t     83022 ns/op\t   20224 B/op\t     167 allocs/op\r\nBenchmarkGin_GithubAll\t   \t\t20000\t     72317 ns/op\t   13792 B/op\t     167 allocs/op\r\nBenchmarkGocraftWeb_GithubAll\t 5000\t    381554 ns/op\t  133280 B/op\t    1889 allocs/op\r\nBenchmarkGoji_GithubAll\t    \t 3000\t    605232 ns/op\t   56113 B/op\t     334 allocs/op\r\nBenchmarkGoJsonRest_GithubAll\t 5000\t    467810 ns/op\t  135995 B/op\t    2940 allocs/op\r\nBenchmarkGoRestful_GithubAll\t  200\t   9345441 ns/op\t  707604 B/op\t    7558 allocs/op\r\nBenchmarkGorillaMux_GithubAll\t  200\t   7043040 ns/op\t  153136 B/op\t    1791 allocs/op\r\nBenchmarkHttpRouter_GithubAll\t30000\t     52251 ns/op\t   13792 B/op\t     167 allocs/op\r\nBenchmarkHttpTreeMux_GithubAll\t10000\t    145114 ns/op\t   56112 B/op\t     334 allocs/op\r\nBenchmarkKocha_GithubAll\t    10000\t    145061 ns/op\t   23304 B/op\t     843 allocs/op\r\nBenchmarkMacaron_GithubAll\t     2000\t    697957 ns/op\t  224960 B/op\t    2315 allocs/op\r\nBenchmarkMartini_GithubAll\t      100\t  11651997 ns/op\t  237953 B/op\t    2686 allocs/op\r\nBenchmarkPat_GithubAll\t          300\t   3951799 ns/op\t 1504101 B/op\t   32222 allocs/op\r\nBenchmarkRevel_GithubAll\t     2000\t   1129370 ns/op\t  345553 B/op\t    5918 allocs/op\r\nBenchmarkRivet_GithubAll\t    10000\t    246564 ns/op\t   84272 B/op\t    1079 allocs/op\r\nBenchmarkTango_GithubAll\t      500\t   3544850 ns/op\t 1338664 B/op\t   27736 allocs/op\r\nBenchmarkTigerTonic_GithubAll\t 2000\t    979370 ns/op\t  241088 B/op\t    6052 allocs/op\r\nBenchmarkTraffic_GithubAll\t      200\t   7508743 ns/op\t 2664762 B/op\t   22390 allocs/op\r\nBenchmarkVulcan_GithubAll\t     5000\t    286727 ns/op\t   19894 B/op\t     609 allocs/op\r\nBenchmarkZeus_GithubAll\t         2000\t    798335 ns/op\t  300688 B/op\t    2648 allocs/op\r\n```\r\n","google":"UA-51208124-3","note":"Don't delete this file! It's used internally to help with page regeneration."}